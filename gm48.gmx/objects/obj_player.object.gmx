<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_vial</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x_speed = 0;
y_speed = 0;
x_speed_acceleration = 0.05;
y_speed_acceleration = 0.05;
max_x_speed = 2;
max_y_speed = 2;
x_speed_decrease = 0.05;
y_speed_decrease = 0.05;

max_hp = 3;
hp = max_hp;

view_dir = point_direction(x,y,mouse_x,mouse_y);
radius = sprite_width/2;

syringe = instance_create(x,y,obj_syringe);
syringe_attack = false;
syringe_gun_dir = 0;
syringe_gun_timer = 0;
syringe_gun_time = room_speed * 0.25;

contents = NOTHING;
amount_of_contents = 1;
view_r_speed = 16;

with(syringe)
{
    owner = other;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_create(x,y,obj_gameover);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var left = keyboard_check(vk_left) || keyboard_check(ord("A"));
var right = keyboard_check(vk_right) || keyboard_check(ord("D"));
var up = keyboard_check(vk_up) || keyboard_check(ord("W"));
var down = keyboard_check(vk_down) || keyboard_check(ord("S"));

var x_axis = right - left;
var y_axis = up - down;

if (x_axis != 0)
{
    x_speed = clamp(x_speed + x_speed_acceleration * sign(x_axis),-max_x_speed,max_x_speed);
}
else
{
    if (x_speed == abs(x_speed))
    {
        x_speed = max(x_speed - x_speed_decrease,0);
    }
    else if (x_speed == -abs(x_speed))
    {
        x_speed = min(x_speed + x_speed_decrease,0);
    }
}

if (y_axis != 0)
{
    y_speed = clamp(y_speed + y_speed_acceleration * sign(y_axis),-max_y_speed,max_y_speed);
}
else
{
    if (y_speed == abs(y_speed))
    {
        y_speed = max(y_speed - y_speed_decrease,0);
    }
    else if (y_speed == -abs(y_speed))
    {
        y_speed = min(y_speed + y_speed_decrease,0);
    }
}

if (syringe.state == syringe.PLAYER_GUN)
{

    contents = syringe.contents;
    if (syringe_gun_timer &gt; 0)
    {
        syringe_gun_timer--;
    }
    
    
    if (keyboard_check(vk_space))
    {
        if (syringe_gun_timer == 0)
        {
            syringe.shoot = true;
            syringe_gun_timer = syringe_gun_time;
        }
    }
    
    syringe_gun_dir = point_direction(x,y,mouse_x,mouse_y);
    syringe.dir = syringe_gun_dir;
}
else
{
    syringe_gun_timer = 1;
    contents = NOTHING;
}

if (mouse_check_button_pressed(mb_left))
{
    var starget = collision_point(mouse_x,mouse_y,obj_enemy,false,true);
    if (starget != noone) &amp;&amp; (starget.contents != NOTHING)
    {
        syringe_attack = true;
        syringe.target = starget;
        syringe.state = syringe.ATTACKING;
        syringe.attack_type = DRAW_MATERIALS;
    }
}

if (mouse_check_button_pressed(mb_right))
{
    var starget = collision_point(mouse_x,mouse_y,obj_enemy,false,true);
    if (starget != noone) &amp;&amp; (syringe.contents != NOTHING)
    {
        syringe_attack = true;
        syringe.target = starget;
        syringe.state = syringe.ATTACKING;
        syringe.attack_type = INJECT_MATERIALS;
    }
}

if (syringe.contents != NOTHING) &amp;&amp; (syringe.state != syringe.PLAYER_GUN)
{
    if (keyboard_check(vk_space))
    {
        syringe.state = syringe.ATTACHING_TO_PLAYER;
    }
}

if (place_meeting(x + x_speed,y - y_speed,obj_wall))
{
    if (place_meeting(x + x_speed,y,obj_wall))
    {
        x_speed = 0;
    }
    
    if (place_meeting(x,y - y_speed,obj_wall))
    {
        y_speed = 0;
    }
}
x += x_speed;
y -= y_speed;

x = clamp(x,0 + sprite_width/2,room_width - sprite_width/2);
y = clamp(y,0 + sprite_height/2,room_height - sprite_height/2);



if (contents != NOTHING)
{
    if (amount_of_contents &lt;= 0)
    {
        contents = NOTHING;
    }
}

if (hp &lt;= 0)
{
    instance_destroy();
}

view_dir += dsin(point_direction(x,y,mouse_x,mouse_y) - view_dir) * view_r_speed;

//var xx = x + lengthdir_x(min(64,distance_to_point(mouse_x,mouse_y)),view_dir);
//var yy = y + lengthdir_y(min(64,distance_to_point(mouse_x,mouse_y)),view_dir); 
view_xview = clamp(x - view_wview/2,0,room_width - view_wview);
view_yview = clamp(y - view_hview/2,0,room_height - view_hview);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>for (var i = 0; i &lt; hp; i++)
{
    draw_sprite(spr_heart,0,32 + (32 * i),32);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (contents != NOTHING)
{
    draw_set_alpha(0.75);
    if (contents == FIRE) draw_set_color(c_red);
    if (contents == ACID) draw_set_color(c_green);
    if (contents == NITRO) draw_set_color(c_blue);
    if (contents == VOID) draw_set_color(c_black);
    if (contents == PLASMA) draw_set_color(c_purple);
    if (contents == PLATINUM) draw_set_color(c_yellow);
    if (contents == BACTERIA) draw_set_color(c_lime);
    draw_circle(floor(x),floor(y),radius,0);
     
}
draw_set_alpha(1);   
draw_sprite_ext(sprite_index,0,floor(x),floor(y),image_xscale,image_yscale,0,c_white,image_alpha);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
